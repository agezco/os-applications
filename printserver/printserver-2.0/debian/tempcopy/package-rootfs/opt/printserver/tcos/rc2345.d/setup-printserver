#!/usr/bin/env python

# standard modules
import commands
import os
import shutil
import string
import sys
import tempfile

from subprocess import check_call

# TCOS modules
import pytcos.tcos as tcos

s = tcos.System()
l = tcos.Ldap()

mac = s.getMac()
ldap_url = s.getLdapUrl()
client_dn = l.getClientDn(mac, ldap_url)
user_dn = l.getUserDn('tcos', ldap_url)
xinetd_template = '''\
service printserver-%(tcp_port)s
{
        type = unlisted
        socket_type = stream
        protocol = tcp
        port = %(tcp_port)s
        wait = no
        user = lp
        server = /usr/local/bin/tcos-printserver
        server_args = %(portdev)s
        groups = yes
        disable = no
}
'''
printers_dn = l.getPrintersDn(client_dn, user_dn, ldap_url)

for printer in printers_dn:
    type = l.getGroupOfUniqueNamesInfo(printer, ldap_url)["schema"]
    if type == 'printserver':
        port = l.getNismapentry(printer, ldap_url).get('Port', 'usb')
        tcp_port = l.getNismapentry(printer, ldap_url).get('TCPPort', '9100')
        if port == 'usb':
            try:
                portdev = '/'.join(['/dev', 'usb', 'lp', l.getNismapentry(printer, ldap_url).get('Device')])
            except:
                print('No Device string found. Defaulting to /dev/lp0')
                portdev = '/dev/usb/lp0'
        elif port == 'parallel':
	    try:
	        # load lp module manually
		ret = check_call(['/sbin/modprobe', 'lp', 'parport=0'])
            except CalledProcessError as e:
	        print(e)
		sys.exit(1)	
            portdev = '/dev/lp0'
        elif port == 'file':
            portdev = l.getNismapentry(printer, ldap_url).get('Filename', '/tmp/' + 'printserver' + '.dmp')
        else:
            print("No valid port.")
        xinetd_name = os.path.join('/etc/xinetd.d', 'printserver' + '-' + tcp_port)
        xinetd_file = open(xinetd_name, 'w')
        xinetd_file.write(xinetd_template % locals())
        xinetd_file.close()

if not commands.getoutput("runlevel").endswith("S"):
    os.system('/etc/init.d/xinetd reload')
